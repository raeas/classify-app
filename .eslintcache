[{"C:\\Users\\ranns\\projects\\classify-app\\src\\index.js":"1","C:\\Users\\ranns\\projects\\classify-app\\src\\App\\App.js":"2","C:\\Users\\ranns\\projects\\classify-app\\src\\Header\\Header.js":"3","C:\\Users\\ranns\\projects\\classify-app\\src\\Footer\\Footer.js":"4","C:\\Users\\ranns\\projects\\classify-app\\src\\dummy-store.js":"5","C:\\Users\\ranns\\projects\\classify-app\\src\\AddBook\\AddBook.js":"6","C:\\Users\\ranns\\projects\\classify-app\\src\\BookshelfMain\\BookshelfMain.js":"7","C:\\Users\\ranns\\projects\\classify-app\\src\\Nav\\Nav.js":"8","C:\\Users\\ranns\\projects\\classify-app\\src\\About\\About.js":"9","C:\\Users\\ranns\\projects\\classify-app\\src\\Home\\Home.js":"10","C:\\Users\\ranns\\projects\\classify-app\\src\\Accordion\\Accordion.js":"11","C:\\Users\\ranns\\projects\\classify-app\\src\\books-helpers.js":"12","C:\\Users\\ranns\\projects\\classify-app\\src\\config.js":"13","C:\\Users\\ranns\\projects\\classify-app\\src\\AppContext.js":"14","C:\\Users\\ranns\\projects\\classify-app\\src\\UpdateBook\\UpdateBook.js":"15","C:\\Users\\ranns\\projects\\classify-app\\src\\BookItem\\BookItem.js":"16"},{"size":268,"mtime":1610774691470,"results":"17","hashOfConfig":"18"},{"size":4099,"mtime":1613152006584,"results":"19","hashOfConfig":"18"},{"size":221,"mtime":1611431395631,"results":"20","hashOfConfig":"18"},{"size":219,"mtime":1612392305085,"results":"21","hashOfConfig":"18"},{"size":2321,"mtime":1611716182808,"results":"22","hashOfConfig":"23"},{"size":4372,"mtime":1613095189036,"results":"24","hashOfConfig":"18"},{"size":689,"mtime":1613082933886,"results":"25","hashOfConfig":"18"},{"size":453,"mtime":1611432817620,"results":"26","hashOfConfig":"18"},{"size":1529,"mtime":1611433101955,"results":"27","hashOfConfig":"18"},{"size":495,"mtime":1611432884535,"results":"28","hashOfConfig":"18"},{"size":2238,"mtime":1612630982561,"results":"29","hashOfConfig":"18"},{"size":203,"mtime":1610932506589,"results":"30","hashOfConfig":"23"},{"size":201,"mtime":1613085961615,"results":"31","hashOfConfig":"18"},{"size":104,"mtime":1611534091745,"results":"32","hashOfConfig":"18"},{"size":5293,"mtime":1613152084852,"results":"33","hashOfConfig":"18"},{"size":1634,"mtime":1613084263964,"results":"34","hashOfConfig":"18"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1n9uifh",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1qfbl6z",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},"C:\\Users\\ranns\\projects\\classify-app\\src\\index.js",[],["74","75"],"C:\\Users\\ranns\\projects\\classify-app\\src\\App\\App.js",["76"],"import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport BookshelfMain from '../BookshelfMain/BookshelfMain'\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\nimport './App.css';\nimport config from '../config'\nimport AddBook from '../AddBook/AddBook'\nimport UpdateBook from '../UpdateBook/UpdateBook'\nimport Nav from '../Nav/Nav'\nimport About from '../About/About'\nimport Home from '../Home/Home'\nimport AppContext from '../AppContext'\nconst {API_BASE_URL} = require('../config');\n\nclass App extends Component {\n  state = {\n    books: [],\n    categories: [],\n    subcategories: [],\n    bookshelf:  [],\n    newBookshelf: [] //needed to refresh bookshelf on add and deletes.\n  }\n\n  async componentDidMount() {\n    let booksRes = await fetch(`${config.API_BASE_URL}/books`, \n    // let booksRes = await fetch(`https://rocky-reaches-94023.herokuapp.com/api/books`,\n      {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n    let books = await booksRes.json()\n    let categoriesRes = await fetch(`${config.API_BASE_URL}/categories`, \n    // let categoriesRes = await fetch(`https://rocky-reaches-94023.herokuapp.com/api/categories`, \n      {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n    let categories = await categoriesRes.json()\n    let subcategoriesRes = await fetch(`${config.API_BASE_URL}/subcategories`, \n    // let subcategoriesRes = await fetch(`https://rocky-reaches-94023.herokuapp.com/api/subcategories`, \n    {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'Authorization': `Bearer ${config.API_KEY}`\n    }\n  })\n    let subcategories = await subcategoriesRes.json()\n    let bookshelfRes = await fetch(`${config.API_BASE_URL}/bookshelf`,\n    // let bookshelfRes = await fetch(`https://rocky-reaches-94023.herokuapp.com/api/bookshelf`, \n    {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json',\n      'Authorization': `Bearer ${config.API_KEY}`\n    }\n  })\n    let bookshelf = await bookshelfRes.json()\n    this.setState({books, categories, subcategories, bookshelf})\n  }\n\n  addBook = (newBookshelf) => {\n    this.setState({\n      bookshelf: newBookshelf\n    }, () => console.log('add book set state ', this.state.books))\n  }\n\n  // updateBook = (updatedBook) => {\n  //   const newBookshelf = this.state.bookshelf.filter(book => \n  //     book.id !== updatedBook.id\n  //     )\n  //   this.setState({\n  //     bookshelf: [...newBookshelf, updatedBook]\n  //   }, ( )=> console.log('updateBook ', this.state.bookshelf))\n  // }\n\n  onDeleteBook = bookId => {\n    const newBookshelf = this.state.bookshelf.filter(book =>\n      book.id !== bookId\n    )\n    this.setState({\n      bookshelf: newBookshelf\n    })\n  }\n\n  render() {\n    console.log(`${config.API_KEY}`)\n    const value = {\n      books: this.state.books,\n      categories: this.state.categories,\n      subcategories: this.state.subcategories,\n      bookshelf: this.state.bookshelf,\n      addBook: this.addBook,\n      //1 add update method to context\n      updateBook: this.updateBook,\n      onDeleteBook: this.onDeleteBook\n    }\n    return (\n      <AppContext.Provider value={value}>\n        <div className='App'>\n          <nav>\n            <Nav />\n          </nav>\n          <header>\n            <Header />\n          </header>\n          <main>\n            <Route exact path='/' component={Home} />\n            <Route path='/about' component={About} />\n            <Route path='/bookshelf' component={BookshelfMain} />\n            <Route path='/add-book' component={AddBook} />\n            {/* 2. add route for editing item  inside other components, use Link comp to link to this route (Bookshelf where Edit button is) */}\n            <Route path='/update-book/:bookId' component={UpdateBook} /> \n          </main>\n          <Footer />\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ranns\\projects\\classify-app\\src\\Header\\Header.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\Footer\\Footer.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\dummy-store.js",[],["77","78"],"C:\\Users\\ranns\\projects\\classify-app\\src\\AddBook\\AddBook.js",["79"],"import React, { Component } from 'react';\r\nimport Accordion from '../Accordion/Accordion'\r\nimport './AddBook.css';\r\nimport config from '../config'\r\nimport AppContext from '../AppContext'\r\nconst { API_BASE_URL } = require('../config');\r\n\r\nclass AddBook extends Component {\r\n\r\n  static contextType = AppContext\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      author_first: '',\r\n      author_last: '',\r\n      description: '',\r\n      category_id: '',\r\n      subcategory_id: ''\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.addCategory = this.addCategory.bind(this)\r\n    this.addSubcategory = this.addSubcategory.bind(this)\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    // let bookshelf\r\n    const book = {\r\n      title: e.target['title'].value,\r\n      author_first: e.target['author_first'].value,\r\n      author_last: e.target['author_last'].value,\r\n      description: e.target['description'].value,\r\n      category_id: this.state.category_id,\r\n      subcategory_id: this.state.subcategory_id\r\n    }\r\n    fetch(`${config.API_BASE_URL}/books`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization': `Bearer ${config.API_KEY}`\r\n      },\r\n      body: JSON.stringify(book),\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(error => {\r\n            throw error\r\n          })\r\n        //     return res.json()\r\n        // })\r\n        fetch(`${config.API_BASE_URL}/bookshelf`, { ///this fetch is nested inside other fetch\r\n          method: 'GET',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'Authorization': `Bearer ${config.API_KEY}`\r\n          },\r\n          // body: JSON.stringify(bookshelf), //do not need for a get\r\n        })\r\n          .then(bookshelfRes => {\r\n            bookshelfRes.json()\r\n              .then(bookshelf => {\r\n                console.log('Add book ', bookshelf)\r\n                this.context.addBook(bookshelf)\r\n              })\r\n            this.props.history.push(`/bookshelf`)\r\n          })\r\n      })\r\n      .catch(error => {\r\n        console.log({ error })\r\n      })\r\n  }\r\n\r\n\r\n  addCategory = (category_id) => {\r\n    console.log('category ', category_id)\r\n    this.setState({ category_id })\r\n  }\r\n\r\n  addSubcategory = (subcategory_id) => {\r\n    console.log('subcategory ', subcategory_id)\r\n    this.setState({ subcategory_id })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='AddBookForm'>\r\n        <h2>Add a Book</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className='field'>\r\n            <label htmlFor='title-input'>\r\n              Title:\r\n              </label>\r\n            <input\r\n              type='text'\r\n              name='title'\r\n              id='title-input'\r\n              aria-label='Title of book'\r\n              aria-required='true'\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='author-first-name-input'>\r\n              Author First Name:\r\n              </label>\r\n            <input\r\n              type='text'\r\n              name='author_first'\r\n              id='author-first-name-input'\r\n              aria-label='first name of the author'\r\n              aria-required='false'\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='author-last-name-input'>\r\n              Author Last Name:\r\n              </label>\r\n            <input\r\n              type='text'\r\n              name='author_last'\r\n              id='author-last-name-input'\r\n              aria-label='Last name of the author'\r\n              aria-required='false'\r\n            />\r\n          </div>\r\n          <div className='field'>\r\n            <label htmlFor='book-description'>\r\n              Description:\r\n              </label>\r\n            <input\r\n              type='text'\r\n              name='description'\r\n              id='book-description'\r\n              aria-label='Description of book'\r\n              aria-required='false'\r\n            />\r\n            <Accordion\r\n              addCategory={this.addCategory}\r\n              addSubcategory={this.addSubcategory} />\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddBook;\r\n","C:\\Users\\ranns\\projects\\classify-app\\src\\BookshelfMain\\BookshelfMain.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\Nav\\Nav.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\About\\About.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\Home\\Home.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\Accordion\\Accordion.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\books-helpers.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\config.js",["80"],"export default {\r\n  // API_ENDPOINT: `http://localhost:8000/api`,\r\n  API_KEY: process.env.REACT_APP_API_KEY,\r\n  API_BASE_URL: process.env.REACT_APP_API_BASE_URL ||\r\n  \"http://localhost:8000/api\"\r\n}\r\n\r\n","C:\\Users\\ranns\\projects\\classify-app\\src\\AppContext.js",[],"C:\\Users\\ranns\\projects\\classify-app\\src\\UpdateBook\\UpdateBook.js",["81"],"import React, { Component } from 'react';\r\nimport Accordion from '../Accordion/Accordion'\r\nimport './UpdateBook.css';\r\nimport config from '../config';\r\nimport AppContext from '../AppContext';\r\nconst {API_BASE_URL} = require('../config');\r\n\r\n//\"Make a component containing a form for editing the item\"\r\n\r\nclass UpdateBook extends Component {\r\n\r\n  static contextType = AppContext\r\n\r\n  state = {\r\n      book_id: '',\r\n      title: '',\r\n      author_first: '',\r\n      author_last: '',\r\n      description: '',\r\n      category_id: '',\r\n      subcategory_id: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { bookId } = this.props.match.params\r\n    let book = this.context.books.find(book => book.id === parseInt(bookId)) || {book_id: '', title: '', author_first: '', author_last: '', description: '', category_id: '', subcategory_id: ''}\r\n    this.setState({\r\n      book_id: book.id,\r\n      title: book.title,\r\n      author_first: book.author_first,\r\n      author_last: book.author_last,\r\n      description: book.description,\r\n      category_id: book.category_id,\r\n      subcategory_id: book.subcategory_id\r\n    })\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({[e.target.name]:e.target.value})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { bookId } = this.props.match.params\r\n    const book = {\r\n      title: this.state.title,\r\n      author_first: this.state.author_first,\r\n      author_last: this.state.author_last,\r\n      description: this.state.description,\r\n      category_id:  this.state.category_id,\r\n      subcategory_id: this.state.subcategory_id,\r\n      // book_id: parseInt(bookId)\r\n    }\r\n\r\n    fetch(`${config.API_BASE_URL}/books/${bookId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'Authorization': `Bearer ${config.API_KEY}`\r\n      }, \r\n      body: JSON.stringify(book),\r\n    })\r\n    .then(res => {\r\n      if(!res.ok)\r\n      return res.json().then(error => {\r\n        throw error\r\n      })\r\n      fetch(`${config.API_BASE_URL}/bookshelf`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'Authorization': `Bearer ${config.API_KEY}`\r\n        },\r\n      })\r\n      .then(bookshelfRes => {\r\n        bookshelfRes.json()\r\n        .then(bookshelf => {\r\n          console.log('Update book ', bookshelf)\r\n          this.context.addBook(bookshelf)\r\n        })\r\n        // book.id = parseInt(bookId)\r\n        // this.context.updateBook(book)\r\n        this.props.history.push(`/bookshelf`)\r\n      })\r\n    })\r\n      .catch(error => {\r\n        console.log({error})\r\n      })\r\n  }\r\n\r\n  addCategory = (category_id) => {\r\n    console.log('category ', category_id)\r\n    this.setState({category_id})\r\n  }\r\n\r\n  addSubcategory = (subcategory_id) => {\r\n    console.log('subcategory ', subcategory_id)\r\n    this.setState({subcategory_id})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='UpdateBookForm'>\r\n        <h2>Update Book</h2>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className='field'>\r\n              <label htmlFor='title-input'>\r\n                Title:\r\n              </label>\r\n              <input\r\n                type='text'\r\n                name='title'\r\n                id='title-input'\r\n                aria-label='Title of book'\r\n                aria-required='true'\r\n                value={this.state.title}\r\n                onChange = {this.handleChange}\r\n                />\r\n            </div>\r\n            <div className='field'>\r\n              <label htmlFor='author-first-name-input'>\r\n                Author First Name:\r\n              </label>\r\n              <input\r\n                type='text'\r\n                name='author_first'\r\n                id='author-first-name-input'\r\n                aria-label='first name of the author'\r\n                aria-required='false'\r\n                value={this.state.author_first}\r\n                onChange = {this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='field'>\r\n              <label htmlFor='author-last-name-input'>\r\n                Author Last Name:\r\n              </label>\r\n              <input\r\n                type='text'\r\n                name='author_last'\r\n                id='author-last-name-input'\r\n                aria-label='Last name of the author'\r\n                aria-required='false'\r\n                value={this.state.author_last}\r\n                onChange = {this.handleChange}\r\n              />\r\n            </div>\r\n            <div className='field'>\r\n              <label htmlFor='book-description'> \r\n                Description:\r\n              </label>\r\n              <input        \r\n                type='text'\r\n                name='description'\r\n                id='book-description'\r\n                aria-label='Description of book'\r\n                aria-required='false'\r\n                value={this.state.description}                      \r\n                onChange = {this.handleChange}\r\n              />\r\n                <Accordion \r\n                  addCategory={this.addCategory} \r\n                  addSubcategory={this.addSubcategory} />\r\n              <input type=\"submit\" value=\"Submit\" />\r\n            </div>\r\n          </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateBook;\r\n","C:\\Users\\ranns\\projects\\classify-app\\src\\BookItem\\BookItem.js",["82"],"import React from 'react';\r\nimport './BookItem.css';\r\nimport AppContext from '../AppContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext } from 'react';\r\nimport config from '../config';\r\nconst {API_BASE_URL} = require('../config');\r\n\r\nfunction BookItem() {\r\n\r\n  const context = useContext(AppContext)\r\n\r\n  function deleteBook(bookId) {\r\n    fetch(`${config.API_BASE_URL}/books/${bookId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'authorization': `bearer ${config.API_KEY}`\r\n      },\r\n      body: JSON.stringify(bookId),\r\n    })\r\n    .then(res => {\r\n      if (!res.ok)\r\n        return res.json().then(e => Promise.reject(e))\r\n    })\r\n    .catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n  return (\r\n    <div className='BookItem'>\r\n      {\r\n          context.bookshelf.map(book => ( \r\n            <li key={book.id} style={{listStyle:'none'}}>\r\n              <p>Title: {book.title}</p>\r\n              <p>Author Last Name: {book.author_last}</p>\r\n              <p>Author First Name: {book.author_first}</p>\r\n              <p>Description: {book.description}</p>\r\n              <p>Category: {book.category}</p>\r\n              <p>Subcategory: {book.subcategory}</p>\r\n              {/* Link to updateBook form */}\r\n              <button><Link to={`/update-book/${book.id}`}>Update Book</Link></button>\r\n              <button onClick={() => {\r\n                deleteBook(book.id)\r\n                context.onDeleteBook(book.id)\r\n              }}>Delete Book</button>\r\n              <hr />\r\n            </li>\r\n          )\r\n          )\r\n        }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookItem;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":14,"column":8,"nodeType":"89","messageId":"90","endLine":14,"endColumn":20},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":1,"column":1,"nodeType":"95","endLine":6,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":20},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'API_BASE_URL' is assigned a value but never used.","Identifier","unusedVar",["96"],["97"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]